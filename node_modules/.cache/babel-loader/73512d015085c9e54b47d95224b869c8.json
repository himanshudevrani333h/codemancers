{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himanshu\\\\Documents\\\\New folder\\\\codemances\\\\src\\\\PostPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport GifyModel from \"./GifyModel\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  let [data, setData] = useState();\n  let [isClicked, setClicked] = useState(false);\n  let [source, setSource] = useState(\"\");\n  useEffect(() => {\n    async function fn() {\n      let one = await fetch(\"https://api.giphy.com/v1/gifs/search?q=funny+cat&api_key=dc6zaTOxFJmzC\");\n      let data = await one.json();\n      console.log(data.data);\n      let arr = [];\n      data.data.map;\n      setData(data.data);\n    }\n\n    fn();\n  }, []);\n\n  function getGIF(source) {\n    if (source) setSource(source);\n  }\n\n  async function getDta(data) {\n    console.log(data);\n    let searchTerm = data;\n    searchTerm = searchTerm.trim().replace(/ /g, \"+\"); // adds a + wherever a space is\n\n    console.log(\"data 23 \", searchTerm);\n    let one = await fetch(`http://api.giphy.com/v1/gifs/search?q=${searchTerm}&api_key=dc6zaTOxFJmzC`);\n    let data_ = await one.json();\n    if (data_) setData(data_.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top_head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CP\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Compose Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PV\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"photo/video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LV\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons-outlined profile\",\n          children: [\" \", \"account_circle\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          placeholder: \"Write something here...\",\n          spellCheck: \"false\",\n          className: \"post_area\",\n          required: true,\n          contentEditable: \"true\",\n          children: source != \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: source,\n            alt: \"loading..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-emoji\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons-outlined emoj\",\n            children: \" mood \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"opt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list_1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tgs\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-outlined loyalty\",\n              children: \" loyalty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"tag friends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gif\",\n            onClick: () => {\n              !isClicked ? setClicked(true) : setClicked(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-outlined gif_box\",\n              children: \"gif_box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"GIF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list_2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loc\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-outlined location\",\n              children: \"location_on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"check in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-outlined event_note\",\n              children: \"event_note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"tag event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_post_only\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons-outlined lock\",\n            children: \" lock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), \"Only me\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_post\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isClicked ? /*#__PURE__*/_jsxDEV(GifyModel, {\n      data: data,\n      fn: getDta,\n      fn2: getGIF\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"5fb/P7t3J+1onK7ry4ZIT9NSl0Q=\");\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["C:/Users/Himanshu/Documents/New folder/codemances/src/PostPage.jsx"],"names":["useEffect","useState","GifyModel","PostPage","data","setData","isClicked","setClicked","source","setSource","fn","one","fetch","json","console","log","arr","map","getGIF","getDta","searchTerm","trim","replace","data_"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport GifyModel from \"./GifyModel\";\r\nimport \"./style.css\";\r\n\r\nconst PostPage = () => {\r\n  let [data, setData] = useState();\r\n  let [isClicked, setClicked] = useState(false);\r\n  let [source, setSource] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fn() {\r\n      let one = await fetch(\r\n        \"https://api.giphy.com/v1/gifs/search?q=funny+cat&api_key=dc6zaTOxFJmzC\"\r\n      );\r\n      let data = await one.json();\r\n      console.log(data.data);\r\n      let arr = [];\r\n      data.data.map\r\n      setData(data.data);\r\n    }\r\n    fn();\r\n  }, []);\r\n\r\n  function getGIF(source) {\r\n    if (source) setSource(source);\r\n  }\r\n  async function getDta(data) {\r\n    console.log(data);\r\n    let searchTerm = data;\r\n    searchTerm = searchTerm.trim().replace(/ /g, \"+\"); // adds a + wherever a space is\r\n    console.log(\"data 23 \", searchTerm);\r\n    let one = await fetch(\r\n      `http://api.giphy.com/v1/gifs/search?q=${searchTerm}&api_key=dc6zaTOxFJmzC`\r\n    );\r\n    let data_ = await one.json();\r\n    if (data_) setData(data_.data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top_head\">\r\n        <div className=\"CP\">\r\n          <p>Compose Post</p>\r\n        </div>\r\n        <div className=\"PV\">\r\n          <p>photo/video</p>\r\n        </div>\r\n        <div className=\"LV\">\r\n          <p>Live Video</p>\r\n        </div>\r\n\r\n        <span>X</span>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content\">\r\n          <span className=\"material-icons-outlined profile\">\r\n            {\" \"}\r\n            account_circle{\" \"}\r\n          </span>\r\n          <div\r\n            placeholder=\"Write something here...\"\r\n            spellCheck=\"false\"\r\n            className=\"post_area\"\r\n            required\r\n            contentEditable=\"true\"\r\n          >\r\n            {source != \"\" ? <img src={source} alt=\"loading..\" /> : null}\r\n          </div>\r\n          <div className=\"theme-emoji\">\r\n            <span className=\"material-icons-outlined emoj\"> mood </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"opt\">\r\n          <div className=\"list_1\">\r\n            <div className=\"tgs\">\r\n              <span className=\"material-icons-outlined loyalty\"> loyalty</span>\r\n              <p>tag friends</p>\r\n            </div>\r\n            <div\r\n              className=\"gif\"\r\n              onClick={() => {\r\n                !isClicked ? setClicked(true) : setClicked(false);\r\n              }}\r\n            >\r\n              <span className=\"material-icons-outlined gif_box\">gif_box</span>\r\n              <p>GIF</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"list_2\">\r\n            <div className=\"loc\">\r\n              <span className=\"material-icons-outlined location\">\r\n                location_on\r\n              </span>\r\n              <p>check in</p>\r\n            </div>\r\n            <div className=\"event\">\r\n              <span className=\"material-icons-outlined event_note\">\r\n                event_note\r\n              </span>\r\n              <p>tag event</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btns\">\r\n          <button className=\"btn_post_only\">\r\n            <span className=\"material-icons-outlined lock\"> lock </span>Only me\r\n          </button>\r\n          <button className=\"btn_post\">Post</button>\r\n        </div>\r\n      </div>\r\n      {isClicked ? <GifyModel data={data} fn={getDta} fn2={getGIF} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"]},"metadata":{},"sourceType":"module"}